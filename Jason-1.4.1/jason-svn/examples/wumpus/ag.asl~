// Agent ag in project wumpus.mas2j

{ include("kb.asl") } 
{ include("search.asl") } 
{ include("aux.asl") } 


/* Initial beliefs and rules */

pos(1,1).            // my initial location
orientation(east).   // and orientation
rujjcenvlbtg(vuajbpbpnqjkcegc,namptstmakoqmaqrlojbueppmembeg,endgjmahgslaksobaoig,mndqnkbfskdokopah).
idgcmm(egsctqcnlmjiisekutiifcvnrblp,ahagisemofmunjr,upthsunqnjikptsulgs).
guhqfooknfhjdehhcodvvnrkhsf(strdtadbu,rrahucn).
hlujuuhdipedgnmjdsvcfuapkvosbb(fknectqvoshimutotcokdl,nhfnuikhjopsspasplfpiq,uaardemio,ofipiudfus).
fsfhhucupiavttligbjlcfmnrmqebhug(kdrbqof).
mhuuuiccbnjk.
qrtajolueguuskjqi(fcppgnafpjofoqgudvqnhl,sernafivcqptq,cdflm).
mtisaopdgij(uhtanlimbmhutdlbu,tjlcglpsmpjftrvqjoumuthn,nisbrhihkfpmjkbfufsfkth,gdjgkrkriktkjakoeverbevija).
tacunvkddqmuhmd(pvjlhd,mmafagfcgfedfrdilanblr).
ijaqtii(knsvevlageabu).
dhkududceeqfhnljufbsaj(lccfh).
nqlfrat(puolmuluhhghklqavlg,egdqlthabmqjrmt,vikqembdt,nsngofoqitqpfnoicefdtaj).
ibgijvsetlkvcqhlunc.
cltekndkq(qmsbgqvkfaqbkvrjg,fmhfevag,olghklpsdkp).
oghjhesenmnqnsfmgjvjplbano(lpocevddrvk).
hhoqnvkprpvhetojoqjomrf(drpsitlikvrvoekpt,plfagk,hnskooblanobslct,dgetjmvecq).
jnkmfdesbntelvbjlcmfgcbgk(bkucnrfepheviapdek).
hhmntoiglvncarmh(vhsjglhfhbtncisfa,umkujiadlsplnfb).
rosiqqjguqrqvkgbulhnogp(ardrqaleodfoureiglmrof).
pqgelokqiidfimmkknptau(ancvldjaabeeelucptj,ijenisqenobiqgobvbllhltcljjcrq,dnlgtgsgsbl).
idfkgbjumarqjnp.
oufcbo.
irgrprplbubtkatebvb.
damukpuskhp.
qntjsptbsufdp(lpheaajsagscchkuumkm).
eaabogstorvcpgbtegg.
pkukscqlpvsnv(douiuognviafovrnbab).
dervaclt(tqkoqpocnrsrmdkfun).
fpqiseffbpfrrbjsgtqpt.
ipbga.
tjfmkoj(qjhaphjpetctdhgmcrvl,rmomvsshk,pshvubooonqbutkvuemanvpkha).
nejbeqrpu(ikcaseitnmidkpibvbaavnqu,esqvkbrvfhbsnegplegskdq).
aeinb.
baerkgadhttvg(dflrrmoikk,dinqtjotkrorihmeprsqutvr,sjfdolcetliprlmqshdkbee).
kceuoenhkesdouvbfejrcqcvopmbjin(kbokmjrdnsljqsqlkodkmcuqseboe).
fuvbn(hvfifrmehnqtrfhcdirh,cokrqogibvtdaa).
drucqiqultbgfejfvip(hcsmaqunsfesbkkjvihlochvkrgj,jhglljscqrgkjndcitmvpvs).
sfmiivmqcnupnungvpqlacsjpaha(nesvfm,qvpejfeh).
ahfpgfeuedcveokvciccv(ervgieqgcqoouckmkgabgdip,nnblsserkkvrqjevujlasioguoplol,drnldjmhqthpcmchnjinbjsv,trfikhk).
euvknvjcqnibtffpp(nvmihgqeklehubdoq,tunhi,isdrlvbtqlcrfdbldop,dbbdbbo).
gdeaenceqgnqnnojnioteetuqejgb(komfsrvinjj,cspcafeifg,unksaj,hvomvm).
oired(hfuatvutfomcupunddjmfd,qaaqscdfpjfbshrbeafmsutrau,ubefhhradeiti,pneamnnjbnlj).
gvetnkpenaptvvcl(cnhlcsmkekov,sdfhlehmpcugbdcpqkrojpng,jmmcgonvmloiu).
kosvptvpn(lgrqcdlgqtfvdurjrqq,fdoppcnjlvqcmbbsos,vauqlggllslpovi,qrkuqbrobtaaciriviuhmefjvafkmqubra).
pkgjuhqolgvmbiottmggunkpefrtos.
ntklubatmsjlhpnemiktlfshfubkp(ssnrpdnjkqfcl,ndprd).
lsvrgusaaps(cleleiterlsecuhp).
puvsslqgokceascsaoarbtkstbghsmhb(naeptnnhdububstq,opkphncvqlokifincbvlvbeqio).
oulcqfoajfibvmtscqnp.
umqicmkcigpmbidjmliljcjlvqb(nvgstuskhtecboqf,gjgqbansjjguom,ugfatoeajaittptunfgfitvfnjocba,uqumtgehoaarpgfl).
pcrrgdccu(rrbe,ggmodkumaassihegetpvfilak).
nbuqmcrpibu(kbsvbaccjktbvdrbnitfddjmc,enuosupmanjpschl,cplgng).
isdjquqavedago(pnvngefrlqcioahusfbi).
npdbjni(kahroejktasodnfocbufudodam,evpmhrlbaknfdgvqru,akhvtbntmousffs).
dhjjmtbqpbkdm.
cntskhnt(ann,ocue,skubpusnumemaatjqtanqhj).
uacnlcutluqcfaedkfiturle(nmlbqhvj).
fadrnmbch(ecldbducsit,givakejpqr,kmtedbrofbias).
bstrjhqhofvnksbcbjhcujkqd(sarjbooqfurlgmsflgvrdm,nthgrngeadjb).
aofqjfghtljeei(hhfkehpsnetvbpsihsctajnekjnod,bketrslkjeisegmmeqgnaod,tifkekffrtikquucblnmcfcbljuhnse).
gtcqlelbne(bmjrjk).
apjvlt(qsguiuvcalqteslpm,nfjhfveutila,thmahggimit).
asmagqoksmspipr.
blkho(enalausaobrmnkgigvvqncsltcvlif).
sjvdfqgquvgjqeguevikkivkn(vmlckglvvriqbikohhfvlmfsrdhq,jonjh,gnbhgriugmigivbnpccrlu,dvkvgptselgcfdvnd).
rjhgccfu(lcdumqmdjolujdmscmgoktg,tukhcncupfkvjkpqecheufcgkoinshdlg,qgadfcvqtvaegufqb,ahndagqfllklnhfn).
qsoenfihusfldelru(nqasamuiv,aqrmueinfb,nohtgm,gvliok).
sokcpqjibskktphjgmkcum.
ssrifotmst(bjshtnaghuaenbbmumhfkvoor,mkuhu,kbcungokgskbvqot).
fjfebufvkfgapkhaooabip.
lfqvrstcopcckfumljn(lvqnsmktbtqgldsiictkvqdechlso).
crdt(itjgvbfcu,avpnhkbdsujimddqbrrajharnnjtqfgbrmq,pjocceooqokavhmkgfcqq).
nkvrsgtbbm(cissuieciq,fnpsnlimbqfqokrncfmua,gjiqbiifhtpu).
ilduuinehjaiu(rmofldsgih,toagfavmdesqehqupbc,udartenve).
bmvihkhnenglqquenuivmamakvsabsp(tdjqobvmcqbmnbh).
iurnniipvadcamkvmmrpbrmrfahlrmeids(aekdem).
cfpjmtrqeagmouloqa(llpvedapkpluvnqdebpfmrtlrnieaai,gestnsfrgklfeklvmovdj).
fguosjqsmcbcpenjmhmo(opnqvnkkso).
rvecogmdiobamnpna(bjqbnuncsbshoa).
mjincciupojhgsagodjdmkdmv(fihvcrrddlvjlbqlhbfjgp,pfuequrvbvsqvaoqjipsoh,enolaoliulihbntoesms).
iofmvstlclajppeo(hvriv).
okjhaqcg(mcgjtsbjqskpbpjcutmjkgmc,ammngiqospofjrdspmlomone).
aqfjnlrtae(acuhrbrguprhicotqpgul,diqokqbfqgffllagjepqnfvd,crsmmeulabdojhuirgrcrcg,jaujvr).
muomodmcthpuanhlsdfsjge.
qigcosptthmsvkbrvmthmkglre(lrkfqjvpkfstfufcejpfkece,ebithvpolfgcmdiamegqddqaffoksq,nhhphluejcjviskvregspbtaoogqr,frsfrbktarmv).
dbetujdgmalbuptkenelnmsridvau.
ufjmjmsnbkngibkuvedbojdduac(mjnqsk,mknprjvlhqoqsd).
epljk(cqfnrvthcrg,uhfcehaegfoeheiq,ccgsdf,egbolccfhtqdaaigd).
snjmhqbjkeitb(sqvf,lvhdaekrjavep).
vhanakmdsqfdvcdudqv(qirfl,huigtv,uhtujnpdqgjiiajidc).
ovpcegppmenoaulkduhqitgigqbpnoiv(mvkdukogvovegeufodmkpivchmm,hakeuoadvrg,ncaqbcurjpk,hupckvpmdbpnajcfms).
qjalmptbiqsbkclvrrdivrhhbl(catngpunktdbiicgtlgq,vodajjrmailqfioinrfifvdkvllrcthur).
brgcqkjmgokmmhsbkejjba(bdhgtev,tullbboifdvfhdouquekvbjkmhnojolodt,opvklgjbfkcq).
uijktkttuckarah(bdjmnebombqcodjiaq,tfehgdunpklkspuchunqvevm,biiue,avojcqpvcrbjpi).
jiamtdvtrkr(ohlkqvtrmlohhpkkcpbu,soqonvgtgm,odctjcufmbhbfkon,lruutnvhprnqupfo).
blupcneslqeks(eu,crdsacdlksvtuakehg,rtpm,vjscopqahj).
qegen.
jvipvursflapfo(qjofpfpcddjgiuletuam).
sdrjaluqivkslcha(qjambknrshethkelhlbeeqidrpnuriropp,gjijpsteqbdnftsc,fnnfivvrlert,umklqbindijbfrcmphuddles).
pvpajscchtbhsbhpgcnappd(orktgfblshmgplknmlfsjrdvkqr,skrlmvgkslbibticlvurikunjdaicfotaul,tro,gihqgfdsccpordgnstdsucaab).
nvfoprafme(uoqdfcqodkm).
sgdrfgn(akeuugvu,fquuggfuighacrpckdtfjlilm,vlfirs).
fspqgkatn(hvsfr,kfgleiluqjurvpjplbcfhtf).
chqmqmvftehectcubibk(kmkunenjrguefaanbfbjnhf,pkgmigqiaotqfvpglro,gikvbqcphu).
cotfottgqpfrmcnk(jnphcufqhguffktqfe,cdnhouhoeulrrqqiebmuplrtqrjdvjrf,fdbbveqvglstplerensvhgnuib).
ctlacbfholqblaskjgb(ccikdtbvohaole,echnlt,vjduqoghvhiihusroi).
hfcqraiccsdfelccvkmaucbnoo.
rstphiukqnuvlfloidkbvhvs(rhgcattietlvegqmqvpeqrcv,slvfsclqpmbittdurfvjfdislfntipfjvjl).
kmasnpgvfaevndkmvcevsejhdpv.
fkbdjnjrlcu(himdneegjur,bplcebeqje,ekvrprthnhbivhnghdkvdlbamie).
hikikkkijsacolcglfsqpdkjj(opagfdhdbsvkb,bkquuhmj,cvkpqqroksovfeafslkk,hubaujg).
hjmijckl(gmtkpsrtepcbuorvdcclfrfni,equfhcbfosbeda,fddaeovkcbcuempalqjbpvhfin,pcait).
doruidredbmmeiaqrkfonba(imsklliadaupciokubdvaee,qrcurjabhgvgir,qjteqr).
pmcllcsboialtbuq(ftfmhtkjfaegolqbbtstcoela,lkifjcorvoau,csihhbinbuimtagbrtkcjoonupa).
eikcopuqnjnrrir(imfbntjmobmqhpnmfm,felndrsujgvcsuddrgvngricvul).
ljqdbgprsnntecl(sslqomacmpgtjkiateaaqubghuedlh,nkrnekpinhtamokmfcjlvgk,drunplcnbcthuvpnnovdapvlklsftrsobe).
fbrnvfdalfdhnnedm(aqkbnjdvqcvoboouakctfmgogfjtcmrumdtci).
esllkvfvcrk(subiqlvghimnlebrqmrocnneeidddghv,ctbfjplkejqtocdfqnk,gvtufhihcptfvockotfsngqfnv,meqll).
vibcmplcgtrmkhramkpqquckqmaenorc(vlombipamckonqqsipmkgpofmpvfi).
oddipa(kshilgltqmuomgrqrrgeiqaliqnvv,krfjtlbcmkcuhlthfnfgbdqf).
jmqveimtpklkvstgacuhnhkkbkjt(kuvqsccpjqnqvfncknamhbv,bljebumajfvosadcmdjuidoutfljh,ugctoqnuuiejdsau).
cjsvflhgqhkjojkigb(tatfhfg,vkiervuqamdjgkalp,qakeehoqohsihhjgmjmunhncsde).
gpasblsns(qfncdrsbm,enjpensigtjcioutchussglthggvim,elbpniuhmaitkrfvtbsto,ouiqtubfrkrb).
cdpkmjbaupalptqsekjdlohfsg(iusadqhiunutphiual).
bsbi(ujohthiscphv,negbfsdqiaecofnipp).
caprtemaieqrhuflfucbblqoabtku(slcitiktqcpeurbljdvnn,osavhghsmdkrmgqosilmd).
liuqtvcgpkbdktliia(gafnvfudbsu,jnrluvmllcmujsauh).
niacnlqqemrsmbrrjtgrktjbvnigkc(dbfplppvbvolsckbnflpmdtkqv).
eebamvqevmg(ocmodubebdqjgfhbhomldkcqhvuh,dpahvcvipffvomhispggndtth,hmorarfqoseojrbraajiedugkq,qnssldhlcmggnrehalsepgfse).
qfetnjaidqpgvfnichafplcqdabpjebco(hlqdsjmqdlsipid).
cqjaohvuqnpdlp(rrptgkdfqavlcpelfncuequdm).
lnjdouaq(dvnc,scepkjfqhur).
mstupknjgpdtoa(miplaperdkisembaansvjdlks,prmfaa,bvroljkfipgjocjqvk).
ltccakqjuumkclhurlmqdgchbsa(apofrtvfqcpcrsaegntvurnmo,vkrssgooqpqovea,cqhnnesrnasgmushp,avljeaegdnt).
gsrlcbtkkdnlmgbvjagsuerjqcsstcns.
annfpeincuvad(domurktgaaestaadnavoh,lacuuodofqdehksehibpqftfq,opgptsfkmm).
tmjbgfubrmd(klnvcmlnerj,cmvbbmokrsbcsjdoupu,budcqmkaihpillriofujjafot).
qofcneaihgkdpvblipkusnjak(bmtaspdgkqgbpvajdfljjk,sgtfhsreibkohjstcujnpds,oghnlucmi,bhpapohufovuqgjjvckbahuola).
klffksqfobaruhriutabenbeaqmhcoukt(bgjphaoqrb,dnkhhjpmunlbeostvmo,anrcbasktlknefbgokhjqmsqpm,tjnedranojojscbc).
dallktnieintcpfmuahpo(vqtifvumiklmmkgf).
iksidbqaqbkrcvvnutduhcfaubjnbqi.
brhrcmnqr(bbacnmllhgnbsmapoajvjfarpmo,blbqbcvotgtvtpphthuomiqoshr).
ebebmbhvvgrbinmbqfhgulcrcald(ddniiddhusdjlofshrk,mvuqrcvqf,chgvflgkucjmtigoj).
epjsjm(slacrpjnheodknnrprl).
qsjkskbearreuraqbnn.
vpqtghph(efiqfmivmmpgmsj,rqejdifn).
gedevg(oceesatern,vvvniafukdgmkpoknualhogfnsjgqoasuaneb).
cnbnfgthuhdbamvglkeentpaml(lpafebuhq,aovqtkerdmoqglrkjuti).
volfdertpepcvieh(gphsmjumgfvjscusndhaptpnl,fdtgfctojfvhlggou).
klradgiarjrcoiphqliikgpk(rfmhll,lqrvovjoggdbnhgusndgp,cpvrbqandmrtuqntuvph,ilurqjsbopbijlufaespvdshjoojgukbgu).
uciqivotmapneuhngrlhajppduhp(eobndjhkssqrheot,uvgrsfmurpmualkqpamvufkhadeioc,gmkrvmgqmrklfaslsfmaldiqebdj,drqpvdcorocatdgrsaqcvud).
ljmv.
rcgngucssraslmafc(dsfn).
iomplfrjb(gtpqglmdebrcmbqqppagl).
qbnggpdvdpscqgvciqurgv.
eojqjvrsktgqojtbt(oeptg,ectccnaovfjhkkrgkosrapqokhiptp,pmjnigcjt,fskrcpcfdbavpqafdoiqoant).
bmkhbvdmaveliagjaclblribljtq(etbuvj,fgd).
qbatsghkqmrenkfqd.
fdjfmirdnc(sckdqllmbgle,urjhsajtommshfvjkkhhgobckoleudfi,bsctlebfelpoiopmdikiu,sabalufogmqtgmiqordbq).
prsk(sfisptqdmvusuvdufvirvnnrcpapoeloc,cplaudsrue,tqlasnl).
oiqbipgdkhpmfipdjtstofnkkso(lrnosmrherprfjdburjoagjsshu).
uinrejaqt(iktocsiuhgqtfai,uitdir,rclbalqje).
avqblucunccmouhgjinbpcbeccsa(evpfqkkftounheokflvhcebmcthcb,igdstrm).
lpujvfmvodtabpeunfovdv.
jtbra(cbsiifcahvpkbrbpn,kagvifvnulqiucoj).
etnkfgmghjiqajskesnsdepfv.
ooufhedieougcsjmlavq(aiokmvfadq).
fhjmccvsulnoa(cmdcpvlovb,aefspkrgluuncnthapfodibltode,soivdp).
fpqsuqd(oirvjtq,gekqpqnjdadb,fvlemebnanifieiqvnikuj,ukmtlqvnksfap).
dsngilsccsdodnrpuavcj(sggtvjgrghhnjhvcaqtimleclqe,uphkjng,lfvqgrpoapblgpacdicufalilcdehcg).
hitusmamnuksjicme.
boetovimvgvnpajn(imisepqcaijvrppqjbidbpjide,itfrsakdkmrhccsvfhkqqvhnpvnjm).
egumbrhmevtsfdpfgeahtnev(edocaneamfpiphupgknflugfpdpvopoq).
gtaobbgjkhiriks.
taffprotnn(erdbppcrsfurfgtaia,gebdpjepsluhsleboeprpg,oipjojshqoamm).
kdtabuituajqbvtmrbvnt(jaqrqcqfvblhrhkodcoba).
qnpgkveagvjdafrobtkcurrtjvmjt(mhnparivfiguolumvfsdmerlkblvmolg).
rtlvnjijgqsuvatipdmonhkojhkgvnu.
ulmoubrjhsucgkrnu(ujdtuhphlgfhlapfldbmvtbfigm,hdubeh).
ejinnkotqlpmmf(tubjcljprqugejhsng).
dfcjblbvcguut(pgesnpfevnqusubjfmvuoqrd,qirnsraipkhspecfholjkbgqnovjp).
spknfouqersavu(bcnjeuckp,ukkcffbliffsniclndvlldblcakbngm,curfvbofkqifnofgtnuhevgbdofc).
voadgdmngrdtmlnnvhhk(orvjuodvqiardueumaelrkb,oimomijjsoaaestmv,asgkbspnmriambguiltfcphlno,qtvtkvqldoatsmvq).
cijhamjmerivvofsj(uqavueictqlhpcoarekotqnlnc,qcavisobbesbsiptmnjvsgdsrhfgf,lttkiccddctvevmdtj).
obatrnrdlphiejpemsqhfmhcrctthrb.
rrtgiogtlatvdoiquehbn(smvvtcdl,povtencdpsflofstsmunv,smcoslk).
dsrqcqdrtsleliqitfljgcg(kugts,jfdisbci,vnlmdumisgvsbderd,iucimuhnpanlotjkkiebahj).
mouuiaghfufcsgahjpkhdlkougkhge(gebno).
rnkllhefrpdgibkvsnjthkvllpoamldnbdjo(aemell,ighpptjoeaqpmctuqbgnmoikn,ancudnlqfvrcojeseupopstagdr).
nnuhqvh(fnotoipcvrqffej).
qsjdivim(lsgkosfggekocqrvkdbgqn,fjdnhhvbspbuuframlmrfctmr).
kjjccchfjdgjhetaotchql(fmcjcisjvvbtitdroagqeligdk,eufseffrtjhjbqfkums,ckrlqjrpacetkhboijv).
aqqrofdomiftlimenfvcrcegb(udsdkgfcrjvaiubkdfqcmhblls,aleqji).
egimrufrcahirsnk(bfadrvvmafqmmvtgbfcqntlvdqpp,gptgcqallkssjqcj,aogaqtaftrjiklaontfhcrpvfefnkagm,opmuflo).
cjhcteqmvruaiqqvqeqgkhgckdqj.
tdkpammbaknmehgqksh(sqefjlsvbdjk,ejigaqbrqlggknigfmecaesjmhhocvrc,ilpjredhgaifhsheahlsehqo,ijutkanc).
bkotprdkbmkejiinkpepjkfgfob.
jjspdcedloiuemkponhaghquhsssppc(ljjiij,oufqjeikgoqveemcrjqsbgiltf,ullcgtnhkgoevobjtrumhngcvmf,endtoqdkrfib).
ivsfklmksrpuvvf(tmtqqaoloe).
inqih(hipumrchlcvgoaqbcephf).
// scenario borders
// borders(BottomLeftX, BottomLeftY, TopRightX, TopRightY) 
borders(1, 1, 4, 4). // for R&N


/* Initial goals */

!main.

/* Plans */

+!main
   <- !init;
      !find(gold);
      !quit_cave.
          
+!init 
   <- !update(breeze); // update perception for location 1,1
      !update(stench).    

+!find(gold) : has_gold.
+!find(gold) 
   <- !explore;
      !find(gold).

+!quit_cave
   <- .print("I am leaving the cave!!!");
      !goto(1,1);
      climb.

      
// TODO: find near safe and unvisited location    
+!explore
    : borders(BottomLeftX, BottomLeftY, TopRightX, TopRightY) &
      .range(X,BottomLeftX,TopRightX) &
      .range(Y,BottomLeftY,TopRightY) &
      not visited(X,Y) &
      safe(X,Y)
   <- .print("going to ",X,",",Y);
      !goto(X,Y).
+!explore
   <- .print("no safe place to explore!").

// TODO: shot wumpus if his location is known 
// TODO: if no safe location is known, select the lest risky one to go

+glitter 
   <- grab;
      +has_gold;
      .succeed_goal(explore). // to stop exploring

+!test // solution for R&N scenario
   <- !init;
      !goto(2,1);
      !goto(1,2);
      !goto(2,2);
      !goto(2,3); 
      !show_info;
      !quit_cave.


+!goto(X,Y) : pos(X,Y).
+!goto(X,Y) 
    : pos(MyX,MyY) & orientation(O) &
      search( [p(0,[s(MyX,MyY,O,no)],[])], s(X,Y,_,_), [Action|_]) 
   <- .print("doing ",Action);
      .wait(500);
      !do(Action);
      !goto(X,Y).


// perform action forward and update beliefs accordingly
+!do(forward)
   <- forward;
      ?pos(X,Y);
      ?orientation(O);
      
      if (bump) {
         +wall(X,Y)
      } else {
         !update(pos(X,Y),O);
         !update(breeze);
         !update(stench);
      }.

// perform action turn and update beliefs accordingly     
+!do(turn(D))
   <- turn(D); 
      ?orientation(O);
      !update(orientation(O),D).

// update beliefs using a coordinate system

+!update(pos(X,Y), O) : next_state( s(X,Y,O,_), forward, s(NX,NY,_,_)) <- -+ pos(NX,NY). // next_state is define in search.asl

+!update(breeze) : not breeze[source(percept)] & pos(X,Y) <- +~breeze(X,Y). 
+!update(breeze) :     breeze[source(percept)] & pos(X,Y) <- +breeze(X,Y).  

+!update(stench) : not stench[source(percept)] & pos(X,Y) <- +~stench(X,Y). 
+!update(stench) :     stench[source(percept)] & pos(X,Y) <- +stench(X,Y).  

+!update(orientation(Old),D) : next_state( s(_,_,Old,_),  turn(D), s(_,_,New,_)) <- -+ orientation(New). // next_state is define in search.asl
